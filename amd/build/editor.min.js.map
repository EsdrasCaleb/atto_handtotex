{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["import { sendImageToServer } from './api';\n\n/**\n * Initializes the HandToTex editor plugin.\n * @param {string} elementId - The ID of the editor element.\n */\nexport function init(elementId) {\n    const editor = document.getElementById(elementId);\n    if (!editor) {\n        M.util.jslog('Editor not found:', elementId);\n        return;\n    }\n\n    const handToTexButton = document.createElement('button');\n    handToTexButton.textContent = 'Draw Equation';\n    handToTexButton.type = 'button';\n    handToTexButton.classList.add('atto_handtotex_button');\n    handToTexButton.onclick = () => openDrawingBoard(editor);\n\n    editor.parentElement.appendChild(handToTexButton);\n}\n\n/**\n * Handles the drawing area for LaTeX generation.\n * @param {HTMLElement} editor - The editor container element.\n */\nfunction openDrawingBoard(editor) {\n    const drawingBoard = document.createElement('div');\n    drawingBoard.classList.add('handtotex-drawing-board');\n    document.body.appendChild(drawingBoard);\n\n    const canvas = document.createElement('canvas');\n    canvas.width = 400;\n    canvas.height = 300;\n    drawingBoard.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    let drawing = false;\n    canvas.addEventListener('mousedown', () => (drawing = true));\n    canvas.addEventListener('mouseup', () => (drawing = false));\n    canvas.addEventListener('mousemove', (e) => {\n        if (!drawing){ return; }\n        const rect = canvas.getBoundingClientRect();\n        ctx.fillStyle = 'black';\n        ctx.beginPath();\n        ctx.arc(e.clientX - rect.left, e.clientY - rect.top, 2, 0, 2 * Math.PI);\n        ctx.fill();\n    });\n\n    const submitButton = document.createElement('button');\n    submitButton.textContent = 'Convert to LaTeX';\n    submitButton.onclick = async () => {\n        const imageData = canvas.toDataURL('image/png');\n        const latexCode = await sendImageToServer(imageData);\n        if (latexCode) {\n            editor.value += `\n${latexCode}\n`;\n        } else {\n            alert('Failed to convert image to LaTeX.');\n        }\n        document.body.removeChild(drawingBoard);\n    };\n    drawingBoard.appendChild(submitButton);\n}\n"],"names":["elementId","editor","document","getElementById","M","util","jslog","handToTexButton","createElement","textContent","type","classList","add","onclick","drawingBoard","body","appendChild","canvas","width","height","ctx","getContext","fillStyle","fillRect","drawing","addEventListener","e","rect","getBoundingClientRect","beginPath","arc","clientX","left","clientY","top","Math","PI","fill","submitButton","async","imageData","toDataURL","latexCode","value","alert","removeChild","openDrawingBoard","parentElement"],"mappings":"2JAMqBA,iBACXC,OAASC,SAASC,eAAeH,eAClCC,mBACDG,EAAEC,KAAKC,MAAM,oBAAqBN,iBAIhCO,gBAAkBL,SAASM,cAAc,UAC/CD,gBAAgBE,YAAc,gBAC9BF,gBAAgBG,KAAO,SACvBH,gBAAgBI,UAAUC,IAAI,yBAC9BL,gBAAgBM,QAAU,aASJZ,cAChBa,aAAeZ,SAASM,cAAc,OAC5CM,aAAaH,UAAUC,IAAI,2BAC3BV,SAASa,KAAKC,YAAYF,oBAEpBG,OAASf,SAASM,cAAc,UACtCS,OAAOC,MAAQ,IACfD,OAAOE,OAAS,IAChBL,aAAaE,YAAYC,cACnBG,IAAMH,OAAOI,WAAW,MAC9BD,IAAIE,UAAY,QAChBF,IAAIG,SAAS,EAAG,EAAGN,OAAOC,MAAOD,OAAOE,YAEpCK,SAAU,EACdP,OAAOQ,iBAAiB,aAAa,IAAOD,SAAU,IACtDP,OAAOQ,iBAAiB,WAAW,IAAOD,SAAU,IACpDP,OAAOQ,iBAAiB,aAAcC,QAC7BF,qBACCG,KAAOV,OAAOW,wBACpBR,IAAIE,UAAY,QAChBF,IAAIS,YACJT,IAAIU,IAAIJ,EAAEK,QAAUJ,KAAKK,KAAMN,EAAEO,QAAUN,KAAKO,IAAK,EAAG,EAAG,EAAIC,KAAKC,IACpEhB,IAAIiB,gBAGFC,aAAepC,SAASM,cAAc,UAC5C8B,aAAa7B,YAAc,mBAC3B6B,aAAazB,QAAU0B,gBACbC,UAAYvB,OAAOwB,UAAU,aAC7BC,gBAAkB,0BAAkBF,WACtCE,UACAzC,OAAO0C,mBACjBD,gBAGUE,MAAM,qCAEV1C,SAASa,KAAK8B,YAAY/B,eAE9BA,aAAaE,YAAYsB,cAhDOQ,CAAiB7C,QAEjDA,OAAO8C,cAAc/B,YAAYT"}