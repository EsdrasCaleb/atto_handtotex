define("atto_handtotex/editor",["exports","./api"],(function(_exports,_api){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=function(elementId){const editor=document.getElementById(elementId);if(!editor)return void M.util.jslog("Editor not found:",elementId);const handToTexButton=document.createElement("button");handToTexButton.textContent="Draw Equation",handToTexButton.type="button",handToTexButton.classList.add("atto_handtotex_button"),handToTexButton.onclick=()=>function(editor){const drawingBoard=document.createElement("div");drawingBoard.classList.add("handtotex-drawing-board"),document.body.appendChild(drawingBoard);const canvas=document.createElement("canvas");canvas.width=400,canvas.height=300,drawingBoard.appendChild(canvas);const ctx=canvas.getContext("2d");ctx.fillStyle="white",ctx.fillRect(0,0,canvas.width,canvas.height);let drawing=!1;canvas.addEventListener("mousedown",(()=>drawing=!0)),canvas.addEventListener("mouseup",(()=>drawing=!1)),canvas.addEventListener("mousemove",(e=>{if(!drawing)return;const rect=canvas.getBoundingClientRect();ctx.fillStyle="black",ctx.beginPath(),ctx.arc(e.clientX-rect.left,e.clientY-rect.top,2,0,2*Math.PI),ctx.fill()}));const submitButton=document.createElement("button");submitButton.textContent="Convert to LaTeX",submitButton.onclick=async()=>{const imageData=canvas.toDataURL("image/png"),latexCode=await(0,_api.sendImageToServer)(imageData);latexCode?editor.value+="\n".concat(latexCode,"\n"):alert("Failed to convert image to LaTeX."),document.body.removeChild(drawingBoard)},drawingBoard.appendChild(submitButton)}(editor),editor.parentElement.appendChild(handToTexButton)}}));

//# sourceMappingURL=editor.min.js.map