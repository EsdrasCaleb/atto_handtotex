{"version":3,"file":"api.min.js","sources":["../src/api.js"],"sourcesContent":["/**\n * Sends the image to the server for processing.\n * @param {string} imageData - Base64-encoded image data.\n * @returns {Promise<string>} - The LaTeX code from the server.\n */\nexport async function sendImageToServer(imageData) {\n    const useExternalServer = M.util.get_config('atto_handtotex', 'useexternalserver');\n    let serverUrl = '';\n\n    if (useExternalServer) {\n        serverUrl = M.util.get_config('atto_handtotex', 'externalserverurl');\n    } else {\n        serverUrl = '/local/handtotex/infer';//Mudar para usar onix\n    }\n\n    try {\n        const response = await fetch(serverUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ image: imageData })\n        });\n\n        if (!response.ok) {\n            throw new Error(`Server error: ${response.status}`);\n        }\n\n        const result = await response.json();\n        return result.latex;\n    } catch (error) {\n        M.util.jslog('Error sending image to server:', error);\n        return null;\n    }\n}\n"],"names":["imageData","useExternalServer","M","util","get_config","serverUrl","response","fetch","method","headers","body","JSON","stringify","image","ok","Error","status","json","latex","error","jslog"],"mappings":"8JAKwCA,iBAC9BC,kBAAoBC,EAAEC,KAAKC,WAAW,iBAAkB,yBAC1DC,UAAY,GAGZA,UADAJ,kBACYC,EAAEC,KAAKC,WAAW,iBAAkB,qBAEpC,mCAINE,eAAiBC,MAAMF,UAAW,CACpCG,OAAQ,OACRC,QAAS,gBACW,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEC,MAAOb,kBAG7BM,SAASQ,SACJ,IAAIC,8BAAuBT,SAASU,sBAGzBV,SAASW,QAChBC,MAChB,MAAOC,cACLjB,EAAEC,KAAKiB,MAAM,iCAAkCD,OACxC"}